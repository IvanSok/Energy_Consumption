)
)
)
# SERVER
server <- function(input, output) {
# Extract the name of the selected dataset
get.granularity <- reactive({
switch(input$Granularity,
"Day" = data_bydays,
"Week" = data_byweeks,
"Month" = data_bymonths)
})
# Prepare the dataset
filteredData <- reactive({
get.granularity()
})
# Print the table
output$datasetTable <- renderDataTable({
final_data <- filteredData()
})
}
# RUNNING APP
shinyApp(ui, server)
# USER INTERFACE
ui <- dashboardPage(
dashboardHeader(title = "Shiny Workshop"),
dashboardSidebar(sidebarMenu(
menuItem("Datasets", tabName = "Datasets", icon = icon("fasfa-address-book")),
menuItem("Graphs", tabName = "Graphs", icon = icon("garaphs")),
menuItem("Text", tabName = "Text", icon = icon("text")),
selectInput(inputId = "Granularity", label = "Select granularity",
choices = c("Day", "Week", "Month"))
)),
dashboardBody(
tabItems(
tabItem(tabName = "Datasets", box(DT::dataTableOutput("Data_by"), width = 10)),
tabItem(tabName = "Graphs", box()),
tabItem(tabName = "Text", box())
)
)
)
# SERVER
server <- function(input, output) {
# Extract the name of the selected dataset
get.granularity <- reactive({
switch(input$Granularity,
"Day" = data_bydays,
"Week" = data_byweeks,
"Month" = data_bymonths)
})
# Prepare the dataset
filteredData <- reactive({
get.granularity()
})
# Print the table
output$Data_by <- renderDataTable({
final_data <- filteredData()
})
}
# RUNNING APP
shinyApp(ui, server)
# USER INTERFACE
ui <- dashboardPage(
dashboardHeader(title = "Shiny Workshop"),
dashboardSidebar(sidebarMenu(
menuItem("Datasets", tabName = "Datasets", icon = icon("fasfa-address-book")),
menuItem("Graphs", tabName = "Graphs", icon = icon("bar-chart-o")),
menuItem("Text", tabName = "Text", icon = icon("line-chart")),
selectInput(inputId = "Granularity", label = "Select granularity",
choices = c("Day", "Week", "Month")),
selectInput(inputId = "Variable", label = "Select a variable",
choices = c("ActiveEnergy", "ReactiveEnergy", "Laundry", "EWAC"))
)),
dashboardBody(
tabItems(
tabItem(tabName = "Datasets", box(DT::dataTableOutput("Data_by"), width = 10)),
tabItem(tabName = "Graphs", box()),
tabItem(tabName = "Text", box())
)
)
)
# SERVER
server <- function(input, output) {
# Extract the name of the selected dataset
get.granularity <- reactive({
switch(input$Granularity,
"Day" = data_bydays,
"Week" = data_byweeks,
"Month" = data_bymonths)
})
# Prepare the dataset
filteredData <- reactive({
get.granularity() %>% select(Variable = input$Variable,
X)
})
# Print the table
output$Data_by <- renderDataTable({
final_data <- filteredData()
})
}
# RUNNING APP
shinyApp(ui, server)
# USER INTERFACE
ui <- dashboardPage(
dashboardHeader(title = "Energy consumption",
titleWidth = 250),
dashboardSidebar(sidebarMenu(
menuItem("Datasets", tabName = "Datasets", icon = icon("fasfa-address-book")),
menuItem("Graphs", tabName = "Graphs", icon = icon("bar-chart-o")),
menuItem("Text", tabName = "Text", icon = icon("line-chart")),
selectInput(inputId = "Granularity", label = "Select granularity",
choices = c("Day", "Week", "Month")),
selectInput(inputId = "Variable", label = "Select a variable",
choices = c("ActiveEnergy", "ReactiveEnergy", "Laundry", "EWAC"))
)),
dashboardBody(
tabItems(
tabItem(tabName = "Datasets", box(DT::dataTableOutput("Data_by"), width = 10)),
tabItem(tabName = "Graphs", box()),
tabItem(tabName = "Text", box())
)
)
)
# SERVER
server <- function(input, output) {
# Extract the name of the selected dataset
get.granularity <- reactive({
switch(input$Granularity,
"Day" = data_bydays,
"Week" = data_byweeks,
"Month" = data_bymonths)
})
# Prepare the dataset
filteredData <- reactive({
get.granularity() %>% select(Variable = input$Variable,
X)
})
# Print the table
output$Data_by <- renderDataTable({
final_data <- filteredData()
})
}
# RUNNING APP
shinyApp(ui, server)
# USER INTERFACE
ui <- dashboardPage(
dashboardHeader(title = "Energy consumption",
titleWidth = 250),
dashboardSidebar(sidebarMenu(
menuItem("Datasets", tabName = "Datasets", icon = icon("fasfa-address-book")),
menuItem("Graphs", tabName = "Graphs", icon = icon("bar-chart-o")),
menuItem("Text", tabName = "Text", icon = icon("line-chart")),
selectInput(inputId = "Granularity", label = "Select granularity",
choices = c("Day", "Week", "Month")),
selectInput(inputId = "Variable", label = "Select a variable",
choices = c("ActiveEnergy", "ReactiveEnergy", "Laundry", "EWAC"))
)),
dashboardBody(
tabItems(
tabItem(tabName = "Datasets", box(DT::dataTableOutput("Data_by"), width = 10)),
tabItem(tabName = "Graphs", box()),
tabItem(tabName = "Text", box())
)
)
)
# SERVER
server <- function(input, output) {
# Extract the name of the selected dataset
get.granularity <- reactive({
switch(input$Granularity,
"Day" = data_bydays,
"Week" = data_byweeks,
"Month" = data_bymonths)
})
# Prepare the dataset
filteredData <- reactive({
get.granularity() %>% select(Variable = input$Variable,
X)
})
# Print the table
output$Data_by <- renderDataTable({
final_data <- filteredData()
})
}
# RUNNING APP
shinyApp(ui, server)
library(readr)
data_bydays <- read_csv("datasets/data_bydays.csv")
View(data_bydays)
data_bydays$X1 <- rename(X1, X)
data_bydays$X1 <- rename("X1", "X")
names(data_bydays)[1] <- "X"
# USER INTERFACE
ui <- dashboardPage(
dashboardHeader(title = "Energy consumption",
titleWidth = 250),
dashboardSidebar(sidebarMenu(
menuItem("Datasets", tabName = "Datasets", icon = icon("fasfa-address-book")),
menuItem("Graphs", tabName = "Graphs", icon = icon("bar-chart-o")),
menuItem("Text", tabName = "Text", icon = icon("line-chart")),
selectInput(inputId = "Granularity", label = "Select granularity",
choices = c("Day", "Week", "Month")),
selectInput(inputId = "Variable", label = "Select a variable",
choices = c("ActiveEnergy", "ReactiveEnergy", "Laundry", "EWAC"))
)),
dashboardBody(
tabItems(
tabItem(tabName = "Datasets", box(DT::dataTableOutput("Data_by"), width = 10)),
tabItem(tabName = "Graphs", box()),
tabItem(tabName = "Text", box())
)
)
)
# SERVER
server <- function(input, output) {
# Extract the name of the selected dataset
get.granularity <- reactive({
switch(input$Granularity,
"Day" = data_bydays,
"Week" = data_byweeks,
"Month" = data_bymonths)
})
# Prepare the dataset
filteredData <- reactive({
get.granularity() %>% select(Variable = input$Variable,
X)
})
# Print the table
output$Data_by <- renderDataTable({
final_data <- filteredData()
})
}
# RUNNING APP
shinyApp(ui, server)
write.csv(data_bydays,"data_bydays.csv")
# USER INTERFACE
ui <- dashboardPage(
dashboardHeader(title = "Energy consumption",
titleWidth = 250),
dashboardSidebar(sidebarMenu(
menuItem("Datasets", tabName = "Datasets", icon = icon("fasfa-address-book")),
menuItem("Graphs", tabName = "Graphs", icon = icon("bar-chart-o")),
menuItem("Text", tabName = "Text", icon = icon("line-chart")),
selectInput(inputId = "Granularity", label = "Select granularity",
choices = c("Day", "Week", "Month")),
selectInput(inputId = "Variable", label = "Select a variable",
choices = c("ActiveEnergy", "ReactiveEnergy", "Laundry", "EWAC"))
)),
dashboardBody(
tabItems(
tabItem(tabName = "Datasets", box(DT::dataTableOutput("Data_by"), width = 10)),
tabItem(tabName = "Graphs", box()),
tabItem(tabName = "Text", box())
)
)
)
# SERVER
server <- function(input, output) {
# Extract the name of the selected dataset
get.granularity <- reactive({
switch(input$Granularity,
"Day" = data_bydays,
"Week" = data_byweeks,
"Month" = data_bymonths)
})
# Prepare the dataset
filteredData <- reactive({
get.granularity() %>% select(Variable = input$Variable,
X)
})
# Print the table
output$Data_by <- renderDataTable({
final_data <- filteredData()
})
}
# RUNNING APP
shinyApp(ui, server)
# USER INTERFACE
ui <- dashboardPage(
dashboardHeader(title = "Energy consumption",
titleWidth = 250),
dashboardSidebar(sidebarMenu(
menuItem("Datasets", tabName = "Datasets", icon = icon("fasfa-address-book")),
menuItem("Graphs", tabName = "Graphs", icon = icon("bar-chart-o")),
menuItem("Text", tabName = "Text", icon = icon("line-chart")),
selectInput(inputId = "Granularity", label = "Select granularity",
choices = c("Day", "Week", "Month")),
selectInput(inputId = "Variable", label = "Select a variable",
choices = c("ActiveEnergy", "ReactiveEnergy", "Laundry", "EWAC"))
)),
dashboardBody(
tabItems(
tabItem(tabName = "Datasets", box(DT::dataTableOutput("Data_by"), width = 10)),
tabItem(tabName = "Graphs", box(highchartOutput("plot"))),
tabItem(tabName = "Text", box())
)
)
)
# SERVER
server <- function(input, output) {
# Extract the name of the selected dataset
get.granularity <- reactive({
switch(input$Granularity,
"Day" = data_bydays,
"Week" = data_byweeks,
"Month" = data_bymonths)
})
# Prepare the dataset
filteredData <- reactive({
get.granularity() %>% select(Variable = input$Variable,
X)
})
# Print the table
output$Data_by <- renderDataTable({
final_data <- filteredData()
})
#Print the plot
output$plot <- renderHighchart ({
data_plot<-filteredData()
hchart(data_plot, "line",hcaes(x=X, y=Variable))
})
}
# RUNNING APP
shinyApp(ui, server)
# USER INTERFACE
ui <- dashboardPage(
dashboardHeader(title = "Energy consumption",
titleWidth = 250),
dashboardSidebar(sidebarMenu(
menuItem("Datasets", tabName = "Datasets", icon = icon("fasfa-address-book")),
menuItem("Graphs", tabName = "Graphs", icon = icon("bar-chart-o")),
menuItem("Text", tabName = "Text", icon = icon("line-chart")),
selectInput(inputId = "Granularity", label = "Select granularity",
choices = c("Day", "Week", "Month")),
selectInput(inputId = "Variable", label = "Select a variable",
choices = c("ActiveEnergy", "ReactiveEnergy", "Laundry", "EWAC"))
)),
dashboardBody(
tabItems(
tabItem(tabName = "Datasets", box(DT::dataTableOutput("Data_by"), width = 10)),
tabItem(tabName = "Graphs", box(highchartOutput("plot"))),
tabItem(tabName = "Text", box(textOutput("messages")))
)
)
)
# SERVER
server <- function(input, output) {
# Extract the name of the selected dataset
get.granularity <- reactive({
switch(input$Granularity,
"Day" = data_bydays,
"Week" = data_byweeks,
"Month" = data_bymonths)
})
# Prepare the dataset
filteredData <- reactive({
get.granularity() %>% select(Variable = input$Variable,
X)
})
# Print the table
output$Data_by <- renderDataTable({
final_data <- filteredData()
})
#Print the plot
output$plot <- renderHighchart ({
data_plot<-filteredData()
hchart(data_plot, "line",hcaes(x=X, y=Variable))
})
# Print the messages
output$messages<- renderText({
data_text<-filteredData()
print(paste0("You have consumed a mean of ", round(mean(data_text$Variable)), " watts"))
})
}
# RUNNING APP
shinyApp(ui, server)
# USER INTERFACE
ui <- dashboardPage(
dashboardHeader(title = "Energy consumption",
titleWidth = 250),
dashboardSidebar(sidebarMenu(
menuItem("Datasets", tabName = "Datasets", icon = icon("fasfa-address-book")),
menuItem("Graphs", tabName = "Graphs", icon = icon("bar-chart-o")),
menuItem("Text", tabName = "Text", icon = icon("line-chart")),
selectInput(inputId = "Granularity", label = "Select granularity",
choices = c("Day", "Week", "Month")),
selectInput(inputId = "Variable", label = "Select a variable",
choices = c("ActiveEnergy", "ReactiveEnergy", "Laundry", "EWAC"))
)),
dashboardBody(
tabItems(
tabItem(tabName = "Datasets", box(DT::dataTableOutput("Data_by"), width = 10)),
tabItem(tabName = "Graphs", box(highchartOutput("plot"))),
tabItem(tabName = "Text",
#First row:
fluidRow(
box(textOutput("messages"))),
#Second row:
fluidRow(
box(infoBoxOutput(width = 6, "box"))
)
)
)
)
)
# SERVER
server <- function(input, output) {
# Extract the name of the selected dataset
get.granularity <- reactive({
switch(input$Granularity,
"Day" = data_bydays,
"Week" = data_byweeks,
"Month" = data_bymonths)
})
# Prepare the dataset
filteredData <- reactive({
get.granularity() %>% select(Variable = input$Variable,
X)
})
# Print the table
output$Data_by <- renderDataTable({
final_data <- filteredData()
})
#Print the plot
output$plot <- renderHighchart ({
data_plot<-filteredData()
hchart(data_plot, "line",hcaes(x=X, y=Variable))
})
# Print the messages
output$messages<- renderText({
data_text<-filteredData()
print(paste0("You have consumed a mean of ",
round(mean(data_text$Variable)), " watts"))
})
# Infobox
output$box <- renderInfoBox({
data_text<-filteredData()
infoBox(
"Information", paste0(round(mean(data_text$Variable)*0.00014), " euros"), icon = icon("list"),
color = "maroon", fill = TRUE)
})
}
# RUNNING APP
shinyApp(ui, server)
# USER INTERFACE
ui <- dashboardPage(
dashboardHeader(title = "Energy consumption",
titleWidth = 250),
dashboardSidebar(sidebarMenu(
menuItem("Datasets", tabName = "Datasets", icon = icon("fasfa-address-book")),
menuItem("Graphs", tabName = "Graphs", icon = icon("bar-chart-o")),
menuItem("Text", tabName = "Text", icon = icon("line-chart")),
selectInput(inputId = "Granularity", label = "Select granularity",
choices = c("Day", "Week", "Month")),
selectInput(inputId = "Variable", label = "Select a variable",
choices = c("ActiveEnergy", "ReactiveEnergy", "Laundry", "EWAC"))
)),
dashboardBody(
tabItems(
tabItem(tabName = "Datasets", box(DT::dataTableOutput("Data_by"), width = 10)),
tabItem(tabName = "Graphs", box(highchartOutput("plot"))),
tabItem(tabName = "Text",
#First row:
fluidRow(
box(textOutput("messages"))),
#Second row:
fluidRow(
box(infoBoxOutput(width = 6, "box"))
)
)
)
)
)
# SERVER
server <- function(input, output) {
# Extract the name of the selected dataset
get.granularity <- reactive({
switch(input$Granularity,
"Day" = data_bydays,
"Week" = data_byweeks,
"Month" = data_bymonths)
})
# Prepare the dataset
filteredData <- reactive({
get.granularity() %>% select(Variable = input$Variable,
X)
})
# Print the table
output$Data_by <- renderDataTable({
final_data <- filteredData()
})
#Print the plot
output$plot <- renderHighchart ({
data_plot<-filteredData()
hchart(data_plot, "line",hcaes(x=X, y=Variable))
})
# Print the messages
output$messages<- renderText({
data_text<-filteredData()
print(paste0("You have consumed a mean of ",
round(mean(data_text$Variable)), " watts"))
})
# Infobox
output$box <- renderInfoBox({
data_text<-filteredData()
infoBox(
"Information", paste0(round(mean(data_text$Variable)*0.00014), " euros"), icon = icon("list"),
color = "maroon", fill = TRUE)
})
}
# RUNNING APP
shinyApp(ui, server)
